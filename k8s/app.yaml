apiVersion: v1
kind: Namespace
metadata:
  name: farhansabbir

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  namespace: farhansabbir
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: slow
  local:
    path: /mnt/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - debian13master

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc
  namespace: farhansabbir
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: slow
  volumeName: mongo-pv
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: farhansabbir
type: Opaque
data:
  MONGO_USERNAME: b3N0YWQ=
  MONGO_PASSWORD: b3N0YWQ=
  MONGO_INITDB_ROOT_USERNAME: b3N0YWQ=
  MONGO_INITDB_ROOT_PASSWORD: b3N0YWQ=

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: farhansabbir
data:
  MONGO_HOST_PORT_DB: mongo:27017/ostad 
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: farhansabbir
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        ports:
        - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: MONGO_INITDB_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: MONGO_INITDB_ROOT_PASSWORD
        volumeMounts:
          - name: mongo-storage
            mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: farhansabbir
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: farhansabbir
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: ostad-server
          image: farhansabbir/ostad-server:latest
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "250m"
              memory: "128Mi"
          ports:
            - containerPort: 5050
          env:
            - name: MONGO_URI
              value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@$(MONGO_HOST_PORT_DB)"
            
            - name: MONGO_HOST_PORT_DB
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_HOST_PORT_DB
            
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGO_USERNAME
                  
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGO_PASSWORD

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: farhansabbir
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5050
      targetPort: 5050
  type: ClusterIP 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: farhansabbir
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: farhansabbir/ostad-ui:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        ports:
        - containerPort: 5173

---
apiVersion: v1
kind: Service
metadata:
  namespace: farhansabbir
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 5173
      targetPort: 5173
  type: ClusterIP 
  
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ostad-ingress
  namespace: farhansabbir
  labels:
    app.kubernetes.io/name: ostad-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: chat.local
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend-service
            port:
              number: 5173
